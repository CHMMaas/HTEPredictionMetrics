% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/overallperformance.R
\name{OP.for.Benefit}
\alias{OP.for.Benefit}
\title{Overall performance metrics for benefit}
\usage{
OP.for.Benefit(
  Y = NULL,
  W = NULL,
  X = NULL,
  p.0 = NULL,
  p.1 = NULL,
  tau.hat = NULL,
  matched.patients = NULL,
  CI = FALSE,
  nr.bootstraps = 50,
  message = TRUE,
  measure = "nearest",
  distance = "mahalanobis",
  estimand = NULL,
  ...
)
}
\arguments{
\item{Y}{a vector of binary outcomes; 1 if an (unfavourable) event; 0 if not}

\item{W}{a vector of treatment assignment; 1 for active treatment; 0 for control}

\item{X}{a matrix or data.frame of patient characteristics or individualized treatment effect predictions, categorical variables may be coded as.factor() to create dummy variables when matching, do not include Y or W in this matrix}

\item{p.0}{a vector of outcome probabilities under control}

\item{p.1}{a vector of outcome probabilities under active treatment}

\item{tau.hat}{a vector of individualized treatment effect predictions}

\item{matched.patients}{dataframe; optional if you want to provide your own dataframe (including p.0, p.1, matched.tau.hat, matched.tau.obs, and also include subclass if confidence interval needs to be computed) of matched patients, otherwise patients will be matched (default=NULL)}

\item{CI}{boolean; TRUE compute confidence interval; default=FALSE do not compute confidence interval (default=FALSE)}

\item{nr.bootstraps}{boolean; number of bootstraps to use for confidence interval computation (default=1)}

\item{message}{boolean; TRUE display computation time message; FALSE do not display message (default=TRUE)}

\item{measure}{measure option of matchit function from MatchIt package (default="nearest")}

\item{distance}{distance option of matchit function from MatchIt package (default="mahalanobis)}

\item{estimand}{default ATC meaning treated units are selected to be matched with control units}

\item{...}{additional arguments for matchit function from MatchIt package}
}
\value{
The output of the OP.for.Benefit function is a "list" with the following components.

matched.patients

a dataframe containing the matched patients.


Cross.entropy.for.benefit

the resulting logistic-loss-for-Benefit value.


Cross.entropy.lower.CI

the lower bound of the confidence interval of the logistic-loss-for-Benefit (if CI = TRUE).


Cross.entropy.upper.CI

the upper bound of the confidence interval of the logistic-loss-for-Benefit (if CI = TRUE).


Brier.for.benefit

the resulting Brier-for-Benefit value.


Brier.lower.CI

the lower bound of the confidence interval of the Brier-for-Benefit (if CI = TRUE).


Brier.upper.CI

the upper bound of the confidence interval of the Brier-for-Benefit (if CI = TRUE).
}
\description{
This function calculates logistic-loss-for-benefit and
Brier-for-benefit.  Please note, this function is only applicable for binary
outcomes.
}
\examples{
library(HTEPredictionMetrics)
set.seed(1)
n <- 100
Y <- sample(0:1, n, replace=TRUE)
W <- sample(0:1, n, replace=TRUE)
X <- matrix(rnorm(n), n, 3)
p.0 <- runif(n)
p.1 <- runif(n)
tau.hat <- runif(n)
OP.out <- OP.for.Benefit(Y=Y, W=W, X=X, p.0=p.0, p.1=p.1, tau.hat=tau.hat,
                        CI=TRUE, nr.bootstraps=100, message=TRUE,
                        matched.patients=NULL,
                        measure="nearest", distance="mahalanobis",
                        estimand=NULL)
OP.out

# alternatively, use a dataframe of matched patients and calculate the overall performance metrics
out.matched <- match.patients(Y=Y, W=W, X=X,
                              p.0=p.0, p.1=p.1, tau.hat=tau.hat,
                              print=TRUE, measure="nearest",
                              distance="mahalanobis", estimand=NULL)
OP.out <- OP.for.Benefit(matched.patients=out.matched$df.matched.pairs,
                        CI=TRUE, nr.bootstraps=100, message=TRUE)
OP.out
}
