% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calibration.R
\name{E.for.Benefit}
\alias{E.for.Benefit}
\title{E-for-benefit}
\usage{
E.for.Benefit(
  Y,
  W,
  X,
  p.0,
  p.1,
  tau.hat,
  CI = FALSE,
  nr.bootstraps = 50,
  message = TRUE,
  matched.patients = NULL,
  measure = "nearest",
  distance = "mahalanobis",
  estimand = NULL,
  replace = FALSE,
  ...
)
}
\arguments{
\item{Y}{a vector of outcomes}

\item{W}{a vector of treatment assignment; 1 for active treatment; 0 for control}

\item{X}{a matrix of patient characteristics or individualized treatment effect predictions}

\item{p.0}{a vector of outcome probabilities under control}

\item{p.1}{a vector of outcome probabilities under active treatment}

\item{tau.hat}{a vector of individualized treatment effect predictions}

\item{CI}{boolean; TRUE compute confidence interval; default=FALSE do not compute confidence interval (default=FALSE)}

\item{nr.bootstraps}{boolean; number of bootstraps to use for confidence interval computation (default=1)}

\item{message}{boolean; TRUE display computation time message; FALSE do not display message (default=TRUE)}

\item{matched.patients}{dataframe; optional if you want to provide your own dataframe of matched patients, otherwise patients will be matched (default=NULL)}

\item{measure}{measure option of matchit function from MatchIt package (default="nearest")}

\item{distance}{distance option of matchit function from MatchIt package (default="mahalanobis)}

\item{estimand}{default ATC meaning treated units are selected to be matched with control units}

\item{replace}{boolean; TRUE if matching with replacement, FALSE if matching without replacement}

\item{...}{additional arguments for matchit function from MatchIt package}
}
\value{
The output of the E.for.benefit function is a "list" with the following components.

matched.patients

a dataframe containing the matched patients.


Eavg.for.benefit

the resulting Eavg-for-Benefit value.


Eavg.lower.CI

the lower bound of the confidence interval of the Eavg-for-Benefit (if CI = TRUE).


Eavg.upper.CI

the upper bound of the confidence interval of the Eavg-for-Benefit (if CI = TRUE).


E50.for.benefit

the resulting E50-for-Benefit value.


E50.lower.CI

the lower bound of the confidence interval of the E50-for-Benefit (if CI = TRUE).


E50.upper.CI

the upper bound of the confidence interval of the E50-for-Benefit (if CI = TRUE).


E90.for.benefit

the resulting E90-for-Benefit value.


E90.lower.CI

the lower bound of the confidence interval of the E90-for-Benefit (if CI = TRUE).


E90.upper.CI

the upper bound of the confidence interval of the E90-for-Benefit (if CI = TRUE).
}
\description{
This function calculates E-for-benefit statistics.
}
\examples{
library(HTEPredictionMetrics)
n <- 100
Y <- sample(0:1, n, replace=TRUE)
W <- sample(0:1, n, replace=TRUE)
X <- matrix(rnorm(n), n, 3)
p.0 <- runif(n)
p.1 <- runif(n)
tau.hat <- runif(n)
EB.out <- E.for.Benefit(Y=Y, W=W, X=X, p.0=p.0, p.1=p.1, tau.hat=tau.hat,
                        CI=TRUE, nr.bootstraps=100, message=TRUE,
                        matched.patients=NULL,
                        measure="nearest", distance="mahalanobis",
                        estimand=NULL, replace=FALSE)
EB.out
}
